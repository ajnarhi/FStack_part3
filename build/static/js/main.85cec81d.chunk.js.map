{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","name","number","put","delete","Filter","props","value","filteredName","onChange","event","console","log","target","setFilteredName","PersonForm","onSubmit","preventDefault","existingPerson","persons","filter","p","newName","length","window","confirm","personService","newNumber","then","response","setNewName","setNewNumber","setPersons","n","data","concat","setNotificationMessage","setTimeout","catch","error","personObject","handleNameChange","handleNumberChange","type","Persons","deleteThisPerson","DeleteButton","onClick","person","map","includes","Notification","message","className","App","useState","notificationMessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85cec81d.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\n\nconst deletePerson = (id)  => {\n  return axios.delete(`${baseUrl}/${id}`)\n\n}\n\nconst replaceOldNumber = (id, name, number) => {\n  return axios.put(`${baseUrl}/${id}`,   {\n    \"name\": name,\n    \"number\": number,\n    \"id\": id\n  },)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  replaceOldNumber: replaceOldNumber, \n  deletePerson : deletePerson\n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n\nconst Filter = (props) => {\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    props.setFilteredName(event.target.value)\n  }\n\n\n\n  return (\n    <form>\n      <div>\n        Filter: <input value={props.filteredName}\n          onChange={handleFilterChange} />\n      </div>\n    </form>\n  )\n}\n\n\n\nconst PersonForm = (props) => {\n\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    //props.persons.some(p => p.name === props.newName some kertoo, että löytyykö vai eikö löydy (true, false)\n    const existingPerson = props.persons.filter(p => p.name === props.newName) //filter tekee listan löytyneistä/löytyneestä\n    if (existingPerson.length > 0) {\n      if(window.confirm(props.newName + ' is already added to phonebook. Do you want to replace their old number with the new number?')){\n      personService\n        .replaceOldNumber(existingPerson[0].id, props.newName, props.newNumber)\n        .then(response => {\n          props.setNewName('')\n          props.setNewNumber('')\n          props.setPersons(props.persons.filter(n => n.id !== response.data.id).concat(response.data))\n        }).then(() => {\n          props.setNotificationMessage(\n            `Person with name '${props.newName}' has now a new phonenumber`\n          )\n          setTimeout(() => {\n            props.setNotificationMessage(null)\n          }, 5000)\n        }).catch(error => {\n          console.log('fail')\n          props.setNotificationMessage(\n            `Person with name '${props.newName} ' has already been removed from server`\n          )\n        })}\n    } else {\n\n      const personObject = {\n        name: props.newName,\n        number: props.newNumber\n      }\n\n      personService.create(personObject)\n        .then(response => {\n          console.log(response)\n          props.setPersons(props.persons.concat(response.data))\n          props.setNewName('')\n          props.setNewNumber('')\n        })\n        .then(() => {\n          props.setNotificationMessage(\n            `Person with name '${personObject.name}' has been added to phonebook`\n          )\n          setTimeout(() => {\n            props.setNotificationMessage(null)\n          }, 5000)\n\n\n        }).catch(error => {\n          // pääset käsiksi palvelimen palauttamaan virheilmoitusolioon näin\n          console.log(error.response.data)\n          props.setNotificationMessage(\n            error.response.data\n          )\n        })\n      }\n    }\n\n    return (\n      <form onSubmit={addNumber}>\n        <div>\n          Name: <input value={props.newName}\n            onChange={props.handleNameChange} />\n        </div>\n        <div>Number: <input value={props.newNumber}\n          onChange={props.handleNumberChange} /></div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n\n\n    )\n\n  }\n\n\n  const Persons = (props) => {\n\n    const deleteThisPerson = (id, name) => {\n      if (window.confirm(`Do you really want delete ${name}?`)) {\n        personService\n          .deletePerson(id)\n          .then(() => {\n\n            props.setPersons(props.persons.filter(n => n.id !== id))\n          }\n          ).then(() => {\n            props.setNotificationMessage(\n              `Person with name '${name}' has been deleted from phonebook`\n            )\n            setTimeout(() => {\n              props.setNotificationMessage(null)\n            }, 5000)\n  \n  \n          })\n\n\n\n      }\n    }\n\n    const DeleteButton = (props) => {\n      return (\n\n        <button onClick={() => deleteThisPerson(props.person.id, props.person.name)}>Delete</button>\n      )\n    }\n\n    if (props.filteredName === '') {\n      return (\n        <div>\n          {props.persons.map(person =>\n            <li key={person.name}>\n              {person.name} {person.number}  { }\n\n              <DeleteButton person={person} />\n            </li>\n          )\n          }</div>\n\n      )\n    } else {\n      return (\n        <div>\n          {props.persons.filter(person => person.name.includes(props.filteredName)).map(person =>\n            <li key={person.name}>\n              {person.name} {person.number} { }\n\n              <button onClick={() => deleteThisPerson(person.id, person.name)}>Delete</button>\n            </li>\n\n          )}\n        </div>)\n    }\n\n  }\n\n\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n\n\n  const App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filteredName, setFilteredName] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n\n    const handleNameChange = (event) => {\n      console.log(event.target.value)\n      setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n      console.log(event.target.value)\n      setNewNumber(event.target.value)\n    }\n\n    useEffect(() => {\n      console.log('effect')\n      personService\n        .getAll()\n        .then(response => {\n          setPersons(response.data)\n        })\n    }, [])\n    console.log('render', persons.length, 'persons')\n\n\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n\n        <h2>Filter phonebook</h2>\n        <Filter persons={persons} filteredName={filteredName} setFilteredName={setFilteredName} />\n\n        <h2>Add new person to phonebook</h2>\n        <Notification message={notificationMessage} />\n        <PersonForm newName={newName} newNumber={newNumber} persons={persons} setNewName={setNewName} setNewNumber={setNewNumber}\n          setPersons={setPersons} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} setNotificationMessage={setNotificationMessage} />\n\n        <h3>Numbers</h3>\n\n        <Persons persons={persons} filteredName={filteredName} setPersons={setPersons} setNotificationMessage={setNotificationMessage} />\n      </div>\n    )\n\n\n  }\n\n  export default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}